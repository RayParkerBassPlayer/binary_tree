== Binary Tree

A simple binary tree implemented in Ruby.

== About

It works, and it's cute, but it is far slower than the highly optimized Ruby array.  Here is the output of the test.rb file with a million integers:

Creating data...

Loading array...

Thread ID: 70208161274580
Total: 0.127827
Sort by: self_time

 %self      total      self      wait     child     calls  name
 99.86      0.128     0.128     0.000     0.000        1   Array#each
  0.14      0.128     0.000     0.000     0.128        1   Global#[No method]

* indicates recursively called methods

Sorting array...

Thread ID: 70208161274580
Total: 0.052135
Sort by: self_time

 %self      total      self      wait     child     calls  name
 99.51      0.052     0.052     0.000     0.000        1   Array#sort
  0.49      0.052     0.000     0.000     0.052        1   Global#[No method]

* indicates recursively called methods

Loading tree...

Thread ID: 70208161274580
Total: 52.652372
Sort by: self_time

 %self      total      self      wait     child     calls  name
 34.49     23.744    18.159     0.000     5.585  4764805   BinaryTreeNode#get_item
 25.15     52.401    13.241     0.000    39.160   100000   BinaryTree#add_item
 11.29     15.711     5.945     0.000     9.766  1958192   BinaryTreeNode#==
 11.23     15.674     5.912     0.000     9.762  1953392   BinaryTreeNode#>
 10.61      5.585     5.585     0.000     0.000  4764805   Kernel#is_a?
  4.90      6.797     2.580     0.000     4.216   853221   BinaryTreeNode#<
  0.72      0.865     0.380     0.000     0.485    95201   Class#new
  0.59      0.310     0.310     0.000     0.000    95201   BinaryTreeNode#initialize
  0.48     52.652     0.251     0.000    52.401        1   Array#each
  0.33      0.175     0.175     0.000     0.000    95201   <Class::BasicObject>#allocate
  0.22      0.114     0.114     0.000     0.000    99999   Kernel#nil?
  0.00     52.652     0.000     0.000    52.652        1   Global#[No method]
  0.00      0.000     0.000     0.000     0.000        1   NilClass#nil?

* indicates recursively called methods

Find an item in array...

Thread ID: 70208161274580
Total: 0.000047
Sort by: self_time

 %self      total      self      wait     child     calls  name
 61.70      0.000     0.000     0.000     0.000        1   Enumerable#find
 29.79      0.000     0.000     0.000     0.000        1   Global#[No method]
  8.51      0.000     0.000     0.000     0.000        1   Array#count

* indicates recursively called methods

Find an item in tree...

Thread ID: 70208161274580
Total: 0.000510
Sort by: self_time

 %self      total      self      wait     child     calls  name
 37.06      0.000     0.000     0.000     0.000       46   BinaryTreeNode#get_item
 19.80      0.000     0.000     0.000     0.000        1   BinaryTree#find_item
 12.94      0.000     0.000     0.000     0.000       46   Kernel#is_a?
 12.35      0.000     0.000     0.000     0.000       20   BinaryTreeNode#==
 10.78      0.000     0.000     0.000     0.000       19   BinaryTreeNode#>
  4.12      0.000     0.000     0.000     0.000        7   BinaryTreeNode#<
  2.35      0.001     0.000     0.000     0.000        1   Global#[No method]
  0.59      0.000     0.000     0.000     0.000        1   Array#count

* indicates recursively called methods
